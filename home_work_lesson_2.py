import random

# Задача 10
# На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом.
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки 
# были повернуты вверх одной и той же стороной. Выведите минимальное количество монет, 
# которые нужно перевернуть.

# 5 -> 1 0 1 1 0
# 2

print("Задача 10")

coin = int(input("Введите n монеток: "))

def tern_coin(n):
    lis = [random.randint(0,1) for i in range(0, n)]
    ind = 0
    for i in range(len(lis)):
        if lis[i] == 1:
           ind += 1
    if ind > len(lis) // 2:
        ind = len(lis) - ind
        print(f"{n} -> {lis} \n{ind}")
    else:
        print(f"{n} -> {lis} \n{ind}")

tern_coin(coin)


# Задача 12
# Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате 
# по математике. Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна 
# их отгадать. Для этого Петя делает две подсказки. Он называет сумму этих чисел S и 
# их произведение P. Помогите Кате отгадать задуманные Петей числа.

print("Задача 12")

num_sum = int(input("Введите сумму чисел:"))
num_prod = int(input("Введите произведение чисел:"))

def pair_search(sum, prod):
    m, p = 0, 0
    for i in range(1, sum):
        p = i*(sum-i)
        if p == prod:
            print(f"{sum} {prod} -> {i} {sum-i}")
            m = 1
            break
    if m !=1:
        print(f"{sum} {prod} -> общая пара отсутствует")

pair_search(num_sum, num_prod)

# Задача 14
# Требуется вывести все целые степени двойки (т.е. числа вида 2 в степени k), не превосходящие числа N.
# 5
# 1 2 4
# 17
# 1 2 4 8 16

print("Задача 14")

n = int(input("Введите число N: "))

def deg_num(limit):
    m = 1
    while True:
        if m > limit:
            break
        else:
            print(m, end=" ")
            m = m*2

deg_num(n)