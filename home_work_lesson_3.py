import random

# Домашняя работа Семинар 3
# Задача 16:
# Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N].
# Пользователь вводит натуральное число N – количество элементов в массиве и число,
# которое необходимо проверить - X. Заполните массив случайными натуральными числами от 1 до N/2.
# Выведите, сколько раз X встречается в массиве.

# Ввод: 5
# Ввод: 1

# 1 2 1 2 2
# Вывод: 2

print("Задача 16")

n16 = int(input("Введите колличество элементов массива: "))
x16 = int(input("Введите число для проверки: "))

def num_x(lend, exam):
    index = 0
    lis = [random.randint(1, lend//2) for i in range(1, lend)]
    for i in range(len(lis)):
        if lis[i] == exam:
            index += 1
    print(f"{lis}\nВывод: {index}")


num_x(n16, x16)


# Задача 18:
# Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X.
# Пользователь вводит натуральное число N – количество элементов в массиве и число, 
# которое необходимо проверить - X. Заполните массив случайными натуральными числами от 1 до N.
# Выведите, ближайший к X элемент. Если есть несколько элементов, которые равноудалены от X, 
# выведите наименьший по величине.

# Ввод: 10
# Ввод: 7
# 1 2 1 8 9 6 5 4 3 4
# Вывод: 6

print("Задача 18")

n18 = int(input("Введите колличество элементов массива: "))
x18 = int(input("Введите число для проверки: "))

def seartch_x(lend, exam):
    index = 0
    lis = [random.randint(1, lend) for i in range(1, lend)]
    for i in range(len(lis)):
        for n in range(len(lis)):
            if lis[n] == exam - (i+1):
                return f"{lis}\nВывод: {lis[n]}"
                break
        for m in range(len(lis)):
            if lis[m] == exam + (i+1):
                return f"{lis}\nВывод: {lis[m]}"
                break
        

print(seartch_x(n18, x18))



# Задача 20:
# В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
# В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.

# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.

# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо только английские, 
# либо только русские буквы.

# Ввод: ноутбук
# Вывод: 12

print("Задача 20")
say = str(input("Ввод: ").upper())

letter_price = {1: "AEIOULNSTRАВЕИНОРСТ", 
                2: "DGДКЛМПУ", 
                3: "BCMPБГЁЬЯ", 
                4: "FHVWYЙЫ", 
                5: "KЖЗХЦЧ", 
                8: "JXШЭЮ", 
                10: "QZФЩЪ"}

def say_price(dic, say):
    price = 0
    keys = list(dic)
    for m in range(len(say)):
        for i in range(len(keys)):
            for n in range(len(dic[keys[i]])):
                if say[m] == dic[keys[i]][n]:
                    price += int(keys[i])
    return price

print(f"Вывод: {say_price(letter_price, say)}")
